diff --git a/src/controllers/certificadoController.js b/src/controllers/certificadoController.js
index 7ac455256e4185ac9c9ff15f4a03690c60c3f54c..8d26466f635e62c04ca44945f3a293891cc82443 100644
--- a/src/controllers/certificadoController.js
+++ b/src/controllers/certificadoController.js
@@ -88,78 +88,73 @@ exports.descargarCertificado = async (req, res, next) => {
     const corporateLogo = "https://www.abexsl.es/images/logo.png";
     let logosHtml;
     if (programa === "Programa Sociedades") {
       logosHtml = `<div class="logo-center"><img src="${corporateLogo}" alt="Logo" /></div>`;
     } else if (programa === "Programa Residentes") {
       logosHtml = `<div class="logo-center"><img src="${usuario.hospital.urlHospiLogo}" alt="Logo Hospital" /></div>`;
     } else {
       const hospiLogo =
         usuario.hospital && usuario.hospital.urlHospiLogo
           ? `<img src="${usuario.hospital.urlHospiLogo}" alt="Logo Hospital" />`
           : "";
       logosHtml = `<div class="logos"><img src="${corporateLogo}" alt="Logo" />${hospiLogo}</div>`;
     }
 
     const formattedBody = certificateStrings.body
       .replace("{{name}}", `${usuario.nombre} ${usuario.apellidos}`)
       .replace("{{hospital}}", usuario.hospital ? usuario.hospital.nombre : "");
 
     const formattedDate = new Intl.DateTimeFormat(lang, {
       day: "numeric",
       month: "long",
       year: "numeric",
     }).format(new Date());
     const dateLine = certificateStrings.dateLine.replace("{{date}}", formattedDate);
 
-    const tutorName =
+    let tutorName =
       certificateStrings.tutorPrefix +
       (usuario.hospital ? usuario.hospital.nombre : "");
-    const tutorRoleLine = certificateStrings.tutorPlaceholder;
+    let tutorRoleLine = certificateStrings.tutorPlaceholder;
+
+    if (programa === "Programa Residentes") {
+      tutorName = usuario.tutor
+        ? `${usuario.tutor.nombre} ${usuario.tutor.apellidos}`
+        : certificateStrings.tutorPlaceholder;
+      tutorRoleLine = usuario.tutor
+        ? `Tutor del programa de residentes del ${usuario.hospital.nombre}`
+        : "";
+      html = html.replace("{{HOSPITAL_LOGO}}", logosHtml);
+    } else {
+      html = html.replace("{{LOGOS}}", logosHtml);
+    }
 
     html = html
       .replace("{{CERT_TITLE}}", certificateStrings.title)
       .replace("{{PROGRAMA}}", programa)
       .replace("{{CERT_BODY}}", formattedBody)
       .replace("{{CERT_DATE}}", dateLine)
       .replace("{{CERT_FOOTER}}", certificateStrings.footer)
       .replace("{{TUTOR_NAME}}", tutorName)
       .replace("{{TUTOR_ROLE_LINE}}", tutorRoleLine)
       .replace("{{LOGO_TOP}}", "https://www.abexsl.es/images/logo.png")
       .replace("{{SIGNATURE_LOGO}}", signatureBase64)
       .replace("{{LANG}}", lang);
 
-    if (programa === "Programa Residentes") {
-      const tutorName = usuario.tutor
-        ? `${usuario.tutor.nombre} ${usuario.tutor.apellidos}`
-        : "Tutor del programa: __________";
-      const tutorRoleLine = usuario.tutor
-        ? `Tutor del programa de residentes del ${usuario.hospital.nombre}`
-        : "";
-      html = html
-        .replace("{{HOSPITAL_LOGO}}", logosHtml)
-        .replace("{{TUTOR_NAME}}", tutorName)
-        .replace("{{TUTOR_ROLE_LINE}}", tutorRoleLine);
-    } else {
-      html = html
-        .replace("{{LOGOS}}", logosHtml)
-        .replace("{{SIGNATURE_LOGO}}", signatureBase64);
-    }
-
     const pdfBuffer = await pdf.generatePdf(
       { content: html },
       { format: "A4" },
     );
     fs.writeFileSync(filePath, pdfBuffer);
 
     res.set("Content-Type", "application/pdf");
     res.download(filePath, "certificado.pdf", (err) => {
       fs.unlink(filePath, (unlinkErr) => {
         if (unlinkErr)
           console.error("Error eliminando certificado temporal", unlinkErr);
       });
       if (err) next(err);
     });
   } catch (err) {
     next(err);
   }
 };
 
