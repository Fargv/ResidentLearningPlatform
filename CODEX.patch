diff --git a/src/utils/sendEmail.js b/src/utils/sendEmail.js
index ca4e81860e98346743bb07d5ba2473c5af7e63b4..6a957f9d2d23b1c4f9215a9d3dd943d0a0d39e45 100644
--- a/src/utils/sendEmail.js
+++ b/src/utils/sendEmail.js
@@ -106,59 +106,64 @@ const sendEmail = async (options = {}) => {
 
   const apiKey = config.brevoApiKey || process.env.BREVO_API_KEY;
   if (!apiKey) {
     console.warn('[sendEmail] BREVO_API_KEY no configurada. Se omite el envío.');
     return;
   }
 
   if (!brevoClient) {
     console.warn('[sendEmail] Cliente de Brevo no inicializado. Se omite el envío.');
     return;
   }
 
   ensureApiKey(brevoClient, apiKey);
 
   const recipients = [];
   normalizeRecipients(recipients, to);
   normalizeRecipients(recipients, emails);
   normalizeRecipients(recipients, email);
 
   const toField = uniqueRecipients(recipients);
   if (!toField.length) {
     console.warn('[sendEmail] No se proporcionaron destinatarios.');
     return;
   }
 
-  const senderEmail = config.email?.from;
-  const payload = {
-    to: toField,
-    subject,
-    textContent: message?.trim(),
-    htmlContent: html || toHtml(message)
-  };
-
-  if (senderEmail) {
-    payload.sender = { email: senderEmail };
-  }
+  const brevoSenderEmail = config.brevo?.senderEmail;
+  const brevoSenderName = config.brevo?.senderName;
+  const senderEmail = brevoSenderEmail || config.email?.from;
+  const senderName = brevoSenderEmail ? brevoSenderName : undefined;
+  const payload = {
+    to: toField,
+    subject,
+    textContent: message?.trim(),
+    htmlContent: html || toHtml(message)
+  };
+
+  if (senderEmail && senderName) {
+    payload.sender = { email: senderEmail, name: senderName };
+  } else if (senderEmail) {
+    payload.sender = { email: senderEmail };
+  }
 
   Object.keys(payload).forEach((key) => {
     if (payload[key] === undefined) {
       delete payload[key];
     }
   });
 
   try {
     return await brevoClient.sendTransacEmail(payload);
   } catch (error) {
     console.error(
       '[sendEmail] Error enviando email transaccional a través de Brevo',
       {
         to: toField.map((recipient) => recipient.email),
         subject,
         error: error?.message || error
       }
     );
     throw error;
   }
 };
 
 module.exports = sendEmail;
