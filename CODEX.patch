diff --git a/client/src/pages/dashboard/TutorUsuarios.tsx b/client/src/pages/dashboard/TutorUsuarios.tsx
index d2816d08a301ab74db689b27ab37fa2a2a378e89..e5806a3f710b0a3c1b1bcb21c39bfef8a3916e80 100644
--- a/client/src/pages/dashboard/TutorUsuarios.tsx
+++ b/client/src/pages/dashboard/TutorUsuarios.tsx
@@ -527,86 +527,105 @@ const TutorUsuarios: React.FC = () => {
                             >
                               {t('tutorUsers.actions.downloadSurgeryReport', {
                                 phase: fase.fase,
                               })}
                             </MenuItem>
                           ))}
                         </Menu>
                       </>
                     )}
                     <IconButton
                       onClick={() => {
                         setEditar(true);
                         setSelected(usuario);
                         setFormData({
                           email: usuario.email,
                           nombre: usuario.nombre,
                           apellidos: usuario.apellidos,
                           rol: usuario.rol,
                           hospital: usuario.hospital?._id || ''
                         });
                         setOpenDialog(true);
                       }}
                     >
                       <EditIcon />
                     </IconButton>
-                    <IconButton
-                      color="error"
-                      onClick={() => handleDelete(usuario._id)}
-                    >
-                      <DeleteIcon />
-                    </IconButton>
                   </TableCell>
                 </TableRow>
               ))}
             </TableBody>
           </Table>
         </TableContainer>
       </Paper>
 
       <Dialog open={openDialog} onClose={() => setOpenDialog(false)}>
         <DialogTitle>{t(editar ? 'tutorUsers.edit' : 'tutorUsers.invite')}</DialogTitle>
         <DialogContent>
           <TextField fullWidth margin="dense" label={t('tutorUsers.form.email')} name="email" value={formData.email} onChange={handleChange} />
           <TextField fullWidth margin="dense" label={t('tutorUsers.form.name')} name="nombre" value={formData.nombre} onChange={handleChange} />
           <TextField fullWidth margin="dense" label={t('tutorUsers.form.surname')} name="apellidos" value={formData.apellidos} onChange={handleChange} />
           <TextField
             select
             fullWidth
             margin="dense"
             label={t('tutorUsers.form.role')}
             name="rol"
             value={formData.rol}
             onChange={handleChange}
             slotProps={{ select: { native: true } }}
           >
             <option value="residente">{t('roles.residente')}</option>
             <option value="tutor">{t('roles.tutor')}</option>
           </TextField>
         </DialogContent>
         <DialogActions>
+          {editar && selected && (
+            <Button
+              color="error"
+              startIcon={<DeleteIcon />}
+              onClick={() => {
+                if (
+                  window.confirm(
+                    t('adminUsers.dialogs.deleteConfirm', {
+                      name: selected.nombre,
+                      lastName: selected.apellidos,
+                    }),
+                  )
+                ) {
+                  handleDelete(selected._id);
+                  setOpenDialog(false);
+                }
+              }}
+            >
+              {t('tutorUsers.buttons.delete')}
+            </Button>
+          )}
           <Button onClick={() => setOpenDialog(false)}>{t('tutorUsers.dialog.cancel')}</Button>
           <Button onClick={handleSubmit} variant="contained" disabled={procesando}>
-            {procesando ? t('tutorUsers.dialog.saving') : editar ? t('tutorUsers.dialog.save') : t('tutorUsers.dialog.invite')}
+            {procesando
+              ? t('tutorUsers.dialog.saving')
+              : editar
+              ? t('tutorUsers.dialog.save')
+              : t('tutorUsers.dialog.invite')}
           </Button>
         </DialogActions>
       </Dialog>
 
       <Backdrop
         open={downloadLoading}
         sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}
       >
         <CircularProgress color="inherit" />
       </Backdrop>
       <Snackbar
         open={snackbar.open}
         autoHideDuration={6000}
         onClose={() => setSnackbar({ ...snackbar, open: false })}
       >
         <Alert severity={snackbar.severity}>{snackbar.message}</Alert>
       </Snackbar>
     </Box>
   );
 };
 
 export default TutorUsuarios;
 
